name: Build Robonomics Home Assistant Image

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Create a stage 'robonomics-stage'
      - name: chmod of files
        run: |
          chmod +x robonomics-stage/prerun.sh &&
          chmod +x robonomics-stage/00-home-assistant/01-run.sh &&
          chmod +x robonomics-stage/01-ipfs-daemon/00-run.sh &&
          chmod +x robonomics-stage/02-zigbee-mqtt/00-run.sh &&
          chmod +x robonomics-stage/02-zigbee-mqtt/02-run.sh &&
          chmod +x robonomics-stage/03-robonomics-integration/00-run.sh
          

      - name: build image
        uses: usimd/pi-gen-action@v1
        id: build
        with:
          # Compression to apply on final image (either "none", "zip", "xz" or "gz").
          compression: xz

          # Compression level to be used. From 0 to 9 (refer to the tool man page for more
          # information on this. Usually 0 is no compression but very fast, up to 9 with the
          # best compression but very slow).
          compression-level: 9

          # Disable the renaming of the first user during the first boot. This make it so
          # 'username' stays activated. 'username' must be set for this to work. Please be
          # aware of the implied security risk of defining a default username and password
          # for your devices.
          disable-first-boot-user-rename: 1

          # Set whether a NOOBS image should be built as well. If enabled, the output
          # directory containing the NOOBS files will be saved as output variable
          # 'image-noobs-path'.
          enable-noobs: false

          # Enable SSH access to Pi.
          enable-ssh: 1

          # If this feature is enabled, the action will configure pi-gen to not export any
          # stage as image but the last one defined in property 'stage-list'. This is
          # helpful when building a single image flavor (in contrast to building a
          # lite/server and full-blown desktop image), since it speeds up the build process
          # significantly.
          export-last-stage-only: true


          # Host name of the image.
          hostname: robots-home

          # Final image name.
          image-name: 'robonomics_homeassistant'

          # Default keyboard keymap.
          keyboard-keymap: us

          # Default keyboard layout.
          keyboard-layout: English (US)

          # Default locale of the system image.
          locale: en_US.UTF-8

          # Path where selected pi-gen ref will be checked out to. If the path does not yet
          # exist, it will be created (including its parents).
          pi-gen-dir: pi-gen

          # GitHub repository to fetch pi-gen from, must be a fork from RPi-Distro/pi-gen.
          pi-gen-repository: RPi-Distro/pi-gen

          # Release version of pi-gen to use. This can both be a branch or tag name known in
          # the pi-gen repository.
          pi-gen-version: arm64

          # The release version to build images against. Valid values are jessie, stretch,
          # buster, bullseye, and testing.
          release: testing

          # List of stage name to execute in given order. Relative and absolute paths to
          # custom stage directories are allowed here. Note that by default pi-gen exports
          # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom
          # stages before one of the exported stages. Otherwise, the action will make sure
          # any custom stage will include an image export directive.
          stage-list: stage0 stage1 stage2 ./robonomics-stage

          # System timezone.
          timezone: Europe/London

          # Use qcow2 images to reduce space and runtime requirements.
          use-qcow2: 1

          # Name of the initial user account.
          username: smart

          # Password of the intial user account, locked if empty.
          password: 'robot'

          # Print all output from pi-gen.
          verbose-output: true

          # Wifi country code of default network to connect to.
          wpa-country: 'US'

      - uses: actions/upload-artifact@v3
        with:
          name: pi-gen-image
          path: ${{ steps.build.outputs.image-path }}